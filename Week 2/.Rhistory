load("~/GitHub/Kevin/Week 2/week2_dataset-kevin.RData")
tmp.week2.dataset[tmp.week2.dataset < 0] <- NA #Re-code all negative values as missing
tmp.week2.dataset <- week2.dataset
tmp.week2.dataset[tmp.week2.dataset < 0] <- NA
sort(tmp.week2.dataset)
list(tmp.week2.dataset)
sort(tmp.week2.dataset)
tmp1.week2.dataset <- na.omit(tmp.week2.dataset)
tmp2.week2.dataset <- log(tmp1.week2.dataset)
list(tmp2.week2.dataset) #Check to make sure all missing values are removed and the values are logged
hist(tmp2.week2.dataset)
boxplot(tmp2.week2.dataset)
plot(density(tmp2.week2.dataset))
mean(tmp2.week2.dataset)
median(tmp1.week2.dataset)
median(tmp2.week2.dataset)
sd(tmp2.week2.dataset)
library(readr)
week3_dataset_kevin <- read_csv("~/GitHub/Kevin/Week 3/week3_dataset-kevin.csv")
View(week3_dataset_kevin)
load("~/GitHub/Kevin/Week 2/week2_dataset-kevin.RData")
nrow(week2.dataset)
nrow(week3_dataset_kevin)
ncol(week3_dataset_kevin)
list(week3_dataset_kevin)
class(x)
class("x")
class(week2.dataset)
mean($x)
mean(df$x)
is.na(week3_dataset_kevin)
colMeans(x, na.rm=FALSE, dims=1)
data.frame(week3_dataset_kevin)
colMeans(x, na.rm=FALSE, dims=1)
colMeans("x", na.rm=FALSE, dims=1)
names(week3_dataset_kevin)
dim(week3_dataset_kevin)
nrow(week3_dataset_kevin) #There are 100 rows
ncol(week3_dataset_kevin) #There are 5 columns
OR
dim(week3_dataset_kevin)
nrow(week3_dataset_kevin) #There are 100 rows
ncol(week3_dataset_kevin) #There are 5 columns
#OR
dim(week3_dataset_kevin)
colMeans(week3_dataset_kevin)
colMedians(week3_dataset_kevin)
Median(week3_dataset_kevin)
median(week3_dataset_kevin)
week3_dataset_kevin$x
week3_dataset_kevin$j
mean($x)
xvar <- list($x)
x[1]
x <- matrix(a1:a100)
mean(week3_dataset_kevin$x)
median(week3_dataset_kevin$x)
sd(week3_dataset_kevin$x)
list(week3_dataset_kevin$x)
IQR(week3_dataset_kevin$x)
summary(week3_dataset_kevin$x)
sort(table(week3_dataset_kevin$x))
summary(week3_dataset_kevin$x)
hist(week3_dataset_kevin$x)
summary(week3_dataset_kevin$y)
sd(week3_dataset_kevin$y)
IQR(week3_dataset_kevin$y)
hist(week3_dataset_kevin$y)
summary(week3_dataset_kevin$j)
sort(table(week3_dataset_kevin$j))
hist(week3_dataset_kevin$j)
summary(week3_dataset_kevin$k)
sort(table(week3_dataset_kevin$k))
hist(week3_dataset_kevin$k)
summary(week2.dataset)
summary(week3_dataset_kevin$x)
list(week2.dataset)
week2.dataset==week3_dataset_kevin$x
tmp.week3_dataset <- week3_dataset_kevin
logical(week3_dataset_kevin$j)
logical(tmp.week3_dataset_kevin$j)
logical(tmp.week3_dataset$j)
logical($j)
logical(tmp.week3_dataset$j)
logical(tmp.week3_dataset$j)
as.logical(tmp.week3_dataset$j)
as.logical(tmp.week3_dataset$i)
as.factor(tmp.week3_dataset$k)
list(tmp.week3_dataset$i)
as.logical(tmp.week3_dataset$i)
list(tmp.week3_dataset$i)
as.logical(c(tmp.week3_dataset$i))
list(tmp.week3_dataset$i)
as.logical(c(tmp.week3_dataset$i, "1", "0"))
list(tmp.week3_dataset$j)
list(tmp.week3_dataset$i)
list(tmp.week3_dataset$i)
list(tmp.week3_dataset$i)
list(tmp.week3_dataset$i)
is.logical(tmp.week3_dataset$i)
as.logical(tmp.week3_dataset$i)
$i <- as.logical(tmp.week3_dataset$i)
i <- as.logical(tmp.week3_dataset$i)
list(i)
list(tmp.week3_dataset$i)
i [i = 1] <- TRUE
i
tmp.week3_dataset$i [i = 1] <- TRUE
class($i)
class(i)
class(i)
j <- as.logical(tmp.week3_dataset$j)
class(j)
k <- factor($k, labels = c("none", "some", "lots", "all"))
k <- factor(tmp.week3_dataset$k, labels = c("none", "some", "lots", "all"))
class(k)
list(k)
list(i)
list(j)
df[$i == FALSE] <- NA
df[i == FALSE] <- NA
View(df)
View(df)
[i == FALSE] <- NA
is.na(i == FALSE)
list(i)
list(i)
i[i == FALSE] <- NA
i[i == NA] <- FALSE
i[is.na(i)] <- FALSE
i[is.na(i)] <- 1
i[i == 1] <- NA
load("~/GitHub/Kevin/Week 2/week2_dataset-kevin.RData")
library(readr)
week3_dataset_kevin <- read_csv("~/GitHub/Kevin/Week 3/week3_dataset-kevin.csv")
View(week3_dataset_kevin)
dim(week3_dataset_kevin)
#Identify any missing values
is.na(week3_dataset_kevin)
#Create a data frame for week 3 data set
data.frame(week3_dataset_kevin)
#Identify the names of the columns for week 3 data set
names(week3_dataset_kevin)
#Find the appropriate summary statistics and a histogram for variable x
summary(week3_dataset_kevin$x)
sd(week3_dataset_kevin$x)
IQR(week3_dataset_kevin$x)
hist(week3_dataset_kevin$x)
#Find the appropriate summary statistics for variable j
summary(week3_dataset_kevin$j)
sort(table(week3_dataset_kevin$j))
hist(week3_dataset_kevin$j)
#Find the appropriate summary statistics for variable i
summary(week3_dataset_kevin$i)
sort(table(week3_dataset_kevin$i))
hist(week3_dataset_kevin$i)
#Find the appropriate summary statistics for variable k
summary(week3_dataset_kevin$k)
sort(table(week3_dataset_kevin$k))
hist(week3_dataset_kevin$k)
#Find the appropriate summary statistics for variable y
summary(week3_dataset_kevin$y)
sd(week3_dataset_kevin$y)
IQR(week3_dataset_kevin$y)
hist(week3_dataset_kevin$y)
#Compare the week2.dataset with the first column of data frame
summary(week2.dataset)
summary(week3_dataset_kevin$x)
week2.dataset==week3_dataset_kevin$x
#The week2.dataset vector is equivalent to the x column in week3 dataset
#Recode the data
tmp.week3_dataset <- week3_dataset_kevin
i <- as.logical(tmp.week3_dataset$i)
list(i)
class(i)
j <- as.logical(tmp.week3_dataset$j)
list(j)
class(j)
k <- factor(tmp.week3_dataset$k, labels = c("none", "some", "lots", "all"))
list(k)
class(k)
i[i == FALSE] <- NA
i[is.na(i)] <- 0
i <- as.logical(tmp.week3_dataset$i)
summary(j)
sort(table(j))
hist(j)
summary(i)
sort(table(i))
hist(i)
summary(k)
sort(table(k))
hist(k)
